#changeCategoryModal.modal.fade(tabindex='-1' aria-labelledby='changeCategoryModalLabel' aria-hidden='true')
  .modal-dialog
    .modal-content
        .modal-header
            h1#changeCategoryModalLabel.modal-title.fs-5 심부름 카테고리 변경
            button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
        .modal-body
            select#rootCategorySelect.form-select(aria-label="rootCategory")
                option(selected) 상위카테고리 선택
            form#changeCategoryForm
#editCategorySuccessModal.modal.fade(tabindex='-1' aria-labelledby='editCategorySuccessModalLabel' aria-hidden='true' data-bs-backdrop="static")
    .modal-dialog
        .modal-content
            .modal-header
                h1#editCategorySuccessModalLabel.modal-title.fs-5 변경 완료
                button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
            .modal-body
                | 변경을 완료했습니다!
            .modal-footer
                button.btn.btn-secondary(type='button' data-bs-dismiss='modal') 확인
script.
    const rootCategorySelect = document.getElementById('rootCategorySelect');
    function submitForm(event){
        event.preventDefault();
        const formData = new FormData(document.getElementById("changeCategoryForm"));
        const xhr = new XMLHttpRequest();
        xhr.open("POST", "/trade/change-category");
        xhr.onreadystatechange = function() {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200) {
                    const changeCategoryModal = document.querySelector('#changeCategoryModal');
                    const modal = bootstrap.Modal.getInstance(changeCategoryModal);
                    modal.hide();

                    const successModal = document.querySelector("#editCategorySuccessModal");
                    const successModalInstance = new bootstrap.Modal(successModal);
                    successModalInstance.show();
                }
            }
        }
        xhr.send(formData);
    }
    function createOptionElement(text, value) {
        const option = document.createElement('option');
        option.innerText = text;
        option.value = value;
        return option;
    }
    function updateRootCategory(rootCategories){
        rootCategories.forEach(function(rootCategory){
            const option = createOptionElement(rootCategory.categoryName, rootCategory.idx);
            rootCategorySelect.appendChild(option);
        });
    }
    
    function updateChangeCategoryForm(rootCategory, subcategories){
        const changeCategoryForm = document.getElementById('changeCategoryForm');
        //rootCategory
        const rootCategoryFormTitle = document.createElement("div");
        rootCategoryFormTitle.setAttribute("class", "h5 my-2");
        rootCategoryFormTitle.setAttribute("for", "rootCategoryName");
        rootCategoryFormTitle.innerText = "상위 카테고리 변경";
        changeCategoryForm.appendChild(rootCategoryFormTitle);

        const rootInputGroup = document.createElement("div");
        rootInputGroup.setAttribute("class", "input-group mt-2")

        const rootCategoryInput = document.createElement("input");
        rootCategoryInput.setAttribute("class", "form-control");
        rootCategoryInput.setAttribute("id", "rootCategoryName");
        rootCategoryInput.setAttribute("disabled", true);
        rootCategoryInput.setAttribute("value", `${rootCategory.categoryName}`);
        rootCategoryInput.name = "rootCategoryName";
        rootInputGroup.appendChild(rootCategoryInput);

        const rootCategoryIdxInput = document.createElement("input");
        rootCategoryIdxInput.type = "hidden";
        rootCategoryIdxInput.name = "rootCategoryIdx";
        rootCategoryIdxInput.value = rootCategory.idx;        
        rootInputGroup.appendChild(rootCategoryIdxInput);

        const changeRootBtn = document.createElement("button");
        changeRootBtn.setAttribute("class", "btn btn-dark");
        changeRootBtn.setAttribute("id", "changeBtn");
        changeRootBtn.type = "button";
        changeRootBtn.innerText = "변경";
        changeRootBtn.addEventListener('click', function (event) {
            event.preventDefault();
            rootCategoryInput.removeAttribute('disabled');
            rootCategoryIdxInput.removeAttribute('disabled');
        });
        rootInputGroup.appendChild(changeRootBtn);
        changeCategoryForm.appendChild(rootInputGroup);
        
        //subcategories
        const line = document.createElement("div");
        line.setAttribute("class", "border-top my-2");
        changeCategoryForm.appendChild(line);
        const subcategoryFormTitle = document.createElement("div");
        subcategoryFormTitle.setAttribute("class", "h5");
        subcategoryFormTitle.innerText = "하위 카테고리 변경"
        changeCategoryForm.appendChild(subcategoryFormTitle);
        subcategories.forEach(function(subcategory){    
            const subInputGroup= document.createElement("div");
            subInputGroup.setAttribute("class", "input-group mt-2")

            const subcategoryInput = document.createElement("input");
            subcategoryInput.setAttribute("class", "form-control");
            subcategoryInput.setAttribute("id", `subcategoryName`);
            subcategoryInput.setAttribute("value", `${subcategory.categoryName}`);
            subcategoryInput.setAttribute("disabled", true);
            subcategoryInput.type = 'text'
            subcategoryInput.name = `subcategoryName`;

            const subcategoryIdxInput = document.createElement("input");
            subcategoryIdxInput.type = "hidden";
            subcategoryIdxInput.name = `subcategoryIdx`;
            subcategoryIdxInput.value = subcategory.idx;
            subcategoryIdxInput.setAttribute("disabled", true);

            const changeBtn = document.createElement("button");
            changeBtn.setAttribute("class", "btn btn-dark");
            changeBtn.setAttribute("id", "changeBtn");
            changeBtn.type = "button";
            changeBtn.innerText = "변경";
            changeBtn.addEventListener('click', function (event) {
                event.preventDefault();
                subcategoryInput.removeAttribute('disabled');
                subcategoryIdxInput.removeAttribute('disabled');
            });

            subInputGroup.appendChild(subcategoryInput);
            subInputGroup.appendChild(subcategoryIdxInput);
            subInputGroup.appendChild(changeBtn);
            changeCategoryForm.appendChild(subInputGroup);
        })
        const submitBtn = document.createElement("button");
        submitBtn.setAttribute("class", "btn btn-dark mt-2 ms-auto");
        submitBtn.setAttribute('type', "submit");
        submitBtn.setAttribute("id", "submitBtn");
        submitBtn.innerText = "변경";
        changeCategoryForm.appendChild(submitBtn);
    }
    function populateRootCategories() {
        
        while (rootCategorySelect.firstChild) {
            rootCategorySelect.removeChild(rootCategorySelect.firstChild);
        }
        const defaultOption = createOptionElement('상위카테고리 선택', '');
        rootCategorySelect.appendChild(defaultOption);
    }

    document.addEventListener('DOMContentLoaded', () => {
        const changeCategoryBtn = document.getElementById('changeCategoryBtn');
        changeCategoryBtn.addEventListener('click', function (event){
            event.preventDefault();
            const xhr = new XMLHttpRequest();
            xhr.open('GET', `/trade/change-category`);
            xhr.onreadystatechange = function() {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        const response = JSON.parse(xhr.responseText);
                        updateRootCategory(response.rootCategories);
                    }
                }
            }
            xhr.send();
        })
        rootCategorySelect.addEventListener('change', function(event){
            event.preventDefault();
            const rootIndex = this.value;
            if (Number.isInteger(parseInt(rootIndex))) { 
                const xhr = new XMLHttpRequest();
                xhr.open('GET', `/trade/change-category?rootIndex=${rootIndex}`);
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === XMLHttpRequest.DONE) {
                        if (xhr.status === 200) {
                            const response = JSON.parse(xhr.responseText);
                            updateChangeCategoryForm(response.rootCategory, response.categories);
                        }
                    }
                }
                xhr.send();
            }
        });
        const changeCategoryModal = document.querySelector('#changeCategoryModal');
        changeCategoryModal.addEventListener('hide.bs.modal', function (event) {
            const modalContent = this.querySelector('.modal-content');
            const modalBody = modalContent.querySelector('.modal-body');
            const form = modalBody.querySelector('#changeCategoryForm');
            while (changeCategoryForm.firstChild) {
                changeCategoryForm.removeChild(changeCategoryForm.firstChild);
            }
            populateRootCategories();
        });
        changeCategoryForm.addEventListener("submit", submitForm);
        //- const submitBtn = document.querySelector("#submitBtn");
        
    });