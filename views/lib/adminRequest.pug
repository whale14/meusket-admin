#requestModal.modal.fade(tabindex='-1' aria-labelledby='requestModalLabel' aria-hidden='true')
        .modal-dialog
            .modal-content
                .modal-header
                    h1#requestModalLabel.modal-title.fs-5 회원정보 확인
                    button.btn-close(type='button' data-bs-dismiss='modal' aria-label='Close')
                form#passwordForm
                    .modal-body 
                        | 관리자 비밀번호 입력
                        input.form-control.mt-1(name='password', type='password' aria-label='Password', aria-describedby='password-addon')
                        #errorMsg
                    .modal-footer
                        button#proceedBtn.btn.btn-dark(type='submit') 확인
                        button.btn.btn-secondary(type='button' data-bs-dismiss='modal') Close
script.
    document.addEventListener('DOMContentLoaded', () => {
        const passwordForm = document.getElementById('passwordForm');
        const editModalBtn = document.getElementById('editModalBtn');
        const removeModalBtn = document.getElementById('removeModalBtn');
        let currentAction = "";
        if(editModalBtn){
            editModalBtn.addEventListener('click', () => {
                currentAction = 'edit';
            });
        }
        if(removeModalBtn){
            removeModalBtn.addEventListener('click', () => {
                currentAction = 'remove';
            });
        }

        const requestModal = document.getElementById('requestModal');
        const modalInstance = new bootstrap.Modal(requestModal);
        requestModal.addEventListener('hidden.bs.modal', () => {
            const errorMsg = document.getElementById('errorMsg');
            errorMsg.innerHTML = '';
            const passwordInput = passwordForm.querySelector('input[name="password"]');
            passwordInput.value = '';
        });    

        passwordForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const passwordInput = passwordForm.querySelector('input[name="password"]');
            const password = passwordInput.value;

            const xhr = new XMLHttpRequest();
            xhr.open('POST', `/auth/request`);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

            xhr.onreadystatechange = function() {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        // Handle the successful response
                        // For example, display the edit modal
                        
                        closeBtn.click();
                        if (currentAction === 'edit') {
                            const editModal = document.getElementById('editModal');
                            const bootstrapModal = new bootstrap.Modal(editModal);
                            bootstrapModal.show();
                        } else if (currentAction === 'remove') {
                            const removeModal = document.getElementById('removeUserModal');
                            const bootstrapModal = new bootstrap.Modal(removeModal);
                            bootstrapModal.show();
                        }
                        // Close the current modal                        
                        passwordInput.value = '';
                        modalInstance.hide();
                    } else {
                        const errorMsg = document.getElementById('errorMsg');
                        const response = JSON.parse(xhr.responseText);
                        errorMsg.innerHTML = '<div class="text-danger mt-1">'+response.error+'</div>';
                    }
                }
            };
            xhr.send(`password=${encodeURIComponent(password)}&authority=${currentAction}`);
        });

    });