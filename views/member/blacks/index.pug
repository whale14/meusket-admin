//- Parameters
//- blacks, page, list, minPage, maxPage, helpeType, blackSearch

extends ../../layout.pug 

block title 
    | 블랙리스트 #{page}p

block content
    .container-fluid
        include policy.pug
        include ../../title.pug
            |  블랙 리스트
            button.btn.btn-dark.btn-sm.me-auto(type='button' data-bs-toggle="modal" data-bs-target="#policyBlackModal") 차단 정책 보기  
        include search.pug
        #blackList.table-responsive.justify-content-center.mt-2
            table.table
                thead.table-light
                    tr
                        th(scope='col' style='width: 10%') idx 
                        th.d-none.d-sm-table-cell(scope='col' style='width: 15%') u_id
                        th(scope='col' style='width: 20%') 이름
                        th(scope='col' class='text-center') 상세정보
                        th(scope='col' style='width: 10%') 해제
                tbody 
                    each black in blacks
                        tr
                            th(scop='row') #{black.pidx}
                            td.d-none.d-sm-table-cell  #{black.u_id}  
                            td  #{black.name} 
                            td.text-center
                                include info.pug
                            td 
                                if black.isUnblock != 1
                                    include remove.pug
                                else 
                                    button.btn.btn-dark.btn-sm.btn-disabled(disabled style="width: 4.2rem;") 해제완료
                    else
                        tr
                            th(scope='row') 
                            td no
                            td blacks
                            td 
                            td
            include ../../pagination.pug

    script.
        document.addEventListener('DOMContentLoaded', () => {
            const buttons = document.querySelectorAll('button[data-bs-toggle="collapse"]');
            const containerElement = document.getElementById('blackList');
            const collapseElementList = containerElement.querySelectorAll('.collapse');
            buttons.forEach(button => {
                button.addEventListener('click', () => {
                const currentIdx = button.id.match(/\d+/)[0];

                // 현재 클릭한 버튼에 관련된 Collapse를 제외한 나머지를 닫음
                collapseElementList.forEach(collapse => {
                    const collapseIdx = collapse.id.match(/\d+/)[0];

                    if (collapseIdx !== currentIdx) {
                        const otherBsCollapse = new bootstrap.Collapse(collapse, { toggle: false });
                        otherBsCollapse.hide();
                    }
                    });
                });
            });
        });

        